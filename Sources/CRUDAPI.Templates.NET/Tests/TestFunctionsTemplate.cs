// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CRUDAPI.Template.NET.Tests
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class TestFunctionsTemplate : TestFunctionsTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 15 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

var pks = modelHelper.GetPKColumns(table);
var tableNamePlural = modelHelper.Pluralize( table.Name );

            
            #line default
            #line hidden
            this.Write("\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Micros" +
                    "oft.Extensions.Logging;\r\nusing NUnit.Framework;\r\nusing ");
            
            #line 24 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Utils.Convertors;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Syste" +
                    "m.Net;\r\nusing System.Text.Json;\r\nusing System.Threading.Tasks;\r\nusing ");
            
            #line 30 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Test.Functions.Common;\r\nusing Microsoft.Extensions.Hosting;\r\nusing Microsoft.Ext" +
                    "ensions.DependencyInjection;\r\n\r\nnamespace ");
            
            #line 34 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Test.E2E.Functions\r\n{\r\n    public class Test");
            
            #line 36 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Functions : FunctionTestBase\r\n    {\r\n        private readonly ILogger _logger = T" +
                    "estFactory.CreateLogger();\r\n        private ");
            
            #line 39 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 39 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".Startup _startup;\r\n        private IHost _host;\r\n\r\n\r\n        public Test");
            
            #line 43 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"Functions()
        {
            _testParams = GetTestParams(""GenericFunctionTestSettings"");
        }

        [SetUp]
        public void Setup()
        {
            var initParams = GetTestParams(""DALInitParams"");

            // Function replies on env vars for config
            Environment.SetEnvironmentVariable(");
            
            #line 54 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.Common.Constants.ENV_DAL_TYPE, _testParams.Settings[\"DALType\"].ToStrin" +
                    "g());\r\n            Environment.SetEnvironmentVariable(");
            
            #line 55 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.Common.Constants.ENV_SQL_CONNECTION_STRING, (string)initParams.Setting" +
                    "s[\"ConnectionString\"]);\r\n            Environment.SetEnvironmentVariable(");
            
            #line 56 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.Common.Constants.ENV_JWT_SECRET, (string)_testParams.Settings[\"JWTSecr" +
                    "et\"]);\r\n            Environment.SetEnvironmentVariable(");
            
            #line 57 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.Common.Constants.ENV_SESSION_TIMEOUT, (string)_testParams.Settings[\"JW" +
                    "TSessionTimeout\"]);\r\n\r\n            _startup = new ");
            
            #line 59 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 59 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".Startup();\r\n            _host = new HostBuilder()\r\n                .ConfigureWeb" +
                    "Jobs(_startup.Configure)                \r\n                .Build();\r\n        }\r\n" +
                    "\r\n        [Test]\r\n        public async Task ");
            
            #line 66 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("GetAll_Success()\r\n        {\r\n            var request = TestFactory.CreateHttpRequ" +
                    "est();\r\n\r\n            var function = GetFunction<");
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@".V1.GetAll>(_host);

            var response = (ObjectResult)await function.Run(request, _logger);

            Assert.IsNotNull(response);
            Assert.AreEqual((int)HttpStatusCode.OK, response.StatusCode);

            var dtos = JsonSerializer.Deserialize<List<");
            
            #line 77 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DTO.");
            
            #line 77 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">>(response.Value.ToString());\r\n\r\n            Assert.NotNull(dtos);\r\n            " +
                    "Assert.IsNotEmpty(dtos);\r\n        }\r\n\r\n        [Test]\r\n        public async Task" +
                    " ");
            
            #line 84 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("GetDetails_Success()\r\n        {\r\n            ");
            
            #line 86 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 86 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = AddTestEntity();\r\n\r\n            try\r\n            {\r\n               " +
                    " var request = TestFactory.CreateHttpRequest();\r\n                var response = " +
                    "(ObjectResult)await(GetFunction<");
            
            #line 91 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 91 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".V1.GetDetails>(_host)).Run(request,\r\n");
            
            #line 92 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

	for(int i = 0; i < pks.Count; ++i)
    {

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\ttestEntity.");
            
            #line 96 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 97 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t_logger);\r\n\r\n                Assert.IsNotNull(response);\r\n                As" +
                    "sert.AreEqual((int)HttpStatusCode.OK, response.StatusCode);\r\n\r\n                v" +
                    "ar dto = JsonSerializer.Deserialize<");
            
            #line 105 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DTO.");
            
            #line 105 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@">(response.Value.ToString());

                Assert.NotNull(dto);
                Assert.AreEqual(testEntity.ID, dto.ID);
            }
            finally
            {
                RemoveTestEntity(testEntity);
            }

        }

        [Test]
        public async Task ");
            
            #line 118 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("GetDetails_NotFound()\r\n        {\r\n");
            
            #line 120 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		for(int i = 0; i < pks.Count; ++i)
		{         

            
            #line default
            #line hidden
            this.Write("\t\t\tvar param");
            
            #line 124 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue;\r\n");
            
            #line 125 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		}

            
            #line default
            #line hidden
            this.Write("            var request = TestFactory.CreateHttpRequest();\r\n            var respo" +
                    "nse = (ObjectResult)await(GetFunction<");
            
            #line 129 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 129 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".V1.GetDetails>(_host)).Run(request, \r\n");
            
            #line 130 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		for(int i = 0; i < pks.Count; ++i)
		{         

            
            #line default
            #line hidden
            this.Write("\t\t\t\tparam");
            
            #line 134 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 135 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		}

            
            #line default
            #line hidden
            this.Write("\t\t\t_logger);\r\n\r\n            Assert.IsNotNull(response);\r\n            Assert.AreEq" +
                    "ual((int)HttpStatusCode.NotFound, response.StatusCode);\r\n        }\r\n\r\n        [T" +
                    "est]\r\n        public async Task ");
            
            #line 145 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("Delete_Success()\r\n        {\r\n            ");
            
            #line 147 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 147 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = AddTestEntity();\r\n\r\n            try\r\n            {\r\n               " +
                    " var request = TestFactory.CreateHttpRequest();\r\n                var response = " +
                    "(StatusCodeResult)await(GetFunction<");
            
            #line 152 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 152 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".V1.Delete>(_host)).Run(request, \r\n\t\t\t\t");
            
            #line 153 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

					for(int i = 0; i < pks.Count; ++i)
					{
				
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\ttestEntity.");
            
            #line 157 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(",\r\n\t\t\t\t");
            
            #line 158 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

					}
				
            
            #line default
            #line hidden
            this.Write(@"				
				_logger);

                Assert.IsNotNull(response);
                Assert.AreEqual((int)HttpStatusCode.OK, response.StatusCode);
            }
            finally
            {
                RemoveTestEntity(testEntity);
            }
        }

        [Test]
        public async Task ");
            
            #line 173 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("Delete_NotFound()\r\n        {\r\n");
            
            #line 175 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		for(int i = 0; i < pks.Count; ++i)
		{         

            
            #line default
            #line hidden
            this.Write("\t\t\tvar param");
            
            #line 179 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue;\r\n");
            
            #line 180 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		}

            
            #line default
            #line hidden
            this.Write("            var request = TestFactory.CreateHttpRequest();\r\n            var respo" +
                    "nse = (ObjectResult)await(GetFunction<");
            
            #line 184 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 184 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".V1.Delete>(_host)).Run(request, \r\n");
            
            #line 185 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		for(int i = 0; i < pks.Count; ++i)
		{         

            
            #line default
            #line hidden
            this.Write("\t\t\t\tparam");
            
            #line 189 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 190 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

		}

            
            #line default
            #line hidden
            this.Write("\t\t\t\t_logger);\r\n\r\n            Assert.IsNotNull(response);\r\n            Assert.AreE" +
                    "qual((int)HttpStatusCode.NotFound, response.StatusCode);\r\n        }\r\n\r\n        [" +
                    "Test]\r\n        public async Task ");
            
            #line 200 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("Insert_Success()\r\n        {\r\n            ");
            
            #line 202 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 202 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = CreateTestEntity();\r\n\r\n            try\r\n            {\r\n            " +
                    "    var dtoReq = ");
            
            #line 206 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Utils.Convertors.");
            
            #line 206 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(testEntity, null);\r\n\r\n                var request = TestFactory" +
                    ".CreateHttpRequest(dtoReq);\r\n                var response = (ObjectResult)await(" +
                    "GetFunction<");
            
            #line 209 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 209 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".V1.Insert>(_host)).Run(request, _logger);\r\n\r\n                Assert.IsNotNull(re" +
                    "sponse);\r\n                Assert.AreEqual((int)HttpStatusCode.Created, response." +
                    "StatusCode);\r\n\r\n                var dto = JsonSerializer.Deserialize<");
            
            #line 214 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DTO.");
            
            #line 214 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">(response.Value.ToString());\r\n\r\n                Assert.NotNull(dto);\r\n\r\n\t\t");
            
            #line 218 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

				for(int i = 0; i < pks.Count; ++i)
				{         
		
            
            #line default
            #line hidden
            this.Write("\t\t\t\ttestEntity.");
            
            #line 222 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = dto.");
            
            #line 222 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t");
            
            #line 223 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

				}
		
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 227 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsPK) {
        
            
            #line default
            #line hidden
            this.Write("                    Assert.NotNull(dto.");
            
            #line 232 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n        ");
            
            #line 233 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                    else {
        
            
            #line default
            #line hidden
            this.Write("                    Assert.AreEqual(dtoReq.");
            
            #line 237 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(", dto.");
            
            #line 237 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t");
            
            #line 238 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                }
		
            
            #line default
            #line hidden
            this.Write("            }\r\n            finally\r\n            {\r\n                RemoveTestEnti" +
                    "ty(testEntity);\r\n            }\r\n        }\r\n\r\n        [Test]\r\n        public asyn" +
                    "c Task ");
            
            #line 250 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("Update_Success()\r\n        {\r\n            ");
            
            #line 252 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 252 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = AddTestEntity();\r\n\r\n            try\r\n            {\r\n              ");
            
            #line 256 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && !c.IsPK && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 265 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 265 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 266 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 271 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 271 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 272 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 277 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 277 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 278 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 283 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 283 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(" ;\r\n              ");
            
            #line 284 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                    }                    
                }
			  
            
            #line default
            #line hidden
            this.Write("\r\n                var reqDto = ");
            
            #line 290 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(testEntity, null);\r\n\r\n                var request = TestFactory" +
                    ".CreateHttpRequest(reqDto);\r\n                var response = (ObjectResult)await(" +
                    "GetFunction<");
            
            #line 293 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 293 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(".V1.Update>(_host)).Run(request, _logger);\r\n\r\n                Assert.IsNotNull(re" +
                    "sponse);\r\n                Assert.AreEqual((int)HttpStatusCode.OK, response.Statu" +
                    "sCode);\r\n\r\n\t\t\t\tvar dto = JsonSerializer.Deserialize<");
            
            #line 298 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DTO.");
            
            #line 298 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">(response.Value.ToString());\r\n\r\n\t\t\t\t");
            
            #line 300 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsPK) {
                
            
            #line default
            #line hidden
            this.Write("                    Assert.NotNull(dto.");
            
            #line 305 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                ");
            
            #line 306 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                    else {
                
            
            #line default
            #line hidden
            this.Write("                    Assert.AreEqual(reqDto.");
            
            #line 310 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(", dto.");
            
            #line 310 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                ");
            
            #line 311 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                }
                
            
            #line default
            #line hidden
            this.Write("            }\r\n            finally\r\n            {\r\n                RemoveTestEnti" +
                    "ty(testEntity);\r\n            }\r\n        }\r\n\r\n        [Test]\r\n        public asyn" +
                    "c Task ");
            
            #line 323 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNamePlural));
            
            #line default
            #line hidden
            this.Write("Update_NotFound()\r\n        {\r\n            ");
            
            #line 325 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 325 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = CreateTestEntity();\r\n\r\n            try\r\n            {\r\n            " +
                    "  ");
            
            #line 329 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 338 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 338 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 339 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 344 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 344 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 345 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 350 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 350 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 351 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 356 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 356 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 357 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                    }
                    else if(c.IsPK)
                    {
               
            
            #line default
            #line hidden
            this.Write("               testEntity.");
            
            #line 363 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue;\r\n               ");
            
            #line 364 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                }
				
            
            #line default
            #line hidden
            this.Write("\r\n                var reqDto = ");
            
            #line 369 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(testEntity, null);\r\n\r\n                var request = TestFactory" +
                    ".CreateHttpRequest(reqDto);\r\n                var response = (ObjectResult)await(" +
                    "GetFunction<");
            
            #line 372 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Functions.");
            
            #line 372 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@".V1.Update>(_host)).Run(request, _logger);

                Assert.IsNotNull(response);
                Assert.AreEqual((int)HttpStatusCode.NotFound, response.StatusCode);
            }
            finally
            {
                RemoveTestEntity(testEntity);
            }
        }

		#region Support methods

        protected bool RemoveTestEntity(");
            
            #line 385 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 385 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" entity)\r\n        {\r\n            if (entity != null)\r\n            {\r\n            " +
                    "    var dal = CreateDal();\r\n\r\n\r\n");
            
            #line 392 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
 
    if(IsSoftDelete && table.HasColumn(SoftDeleteField))
    {

            
            #line default
            #line hidden
            this.Write("        return dal.Erase(");
            
            #line 396 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    for(int i = 0; i < pks.Count; ++i)
                    {
                
            
            #line default
            #line hidden
            this.Write("                        entity.");
            
            #line 400 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 400 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            this.Write("\r\n                ");
            
            #line 401 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 404 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("\r\n                return dal.Delete(");
            
            #line 410 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    for(int i = 0; i < pks.Count; ++i)
                    {
                
            
            #line default
            #line hidden
            this.Write("                        entity.");
            
            #line 414 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 414 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            this.Write("\r\n                ");
            
            #line 415 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                    }
                
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 418 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("            }\r\n            else\r\n            {\r\n                return false;\r\n  " +
                    "          }\r\n        }\r\n\r\n        protected ");
            
            #line 428 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 428 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" CreateTestEntity()\r\n        {\r\n            var entity = new ");
            
            #line 430 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 430 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n            ");
            
            #line 431 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsInsert.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 440 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 440 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 441 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 446 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 446 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 447 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 452 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 452 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 453 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                        else if(testValsInsert[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 458 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 458 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 459 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n            return entity;\r\n        }\r\n\r\n        protected ");
            
            #line 468 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 468 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" AddTestEntity()\r\n        {\r\n            ");
            
            #line 470 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 470 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" result = null;\r\n\r\n            var entity = CreateTestEntity();\r\n\r\n            va" +
                    "r dal = CreateDal();\r\n            result = dal.Insert(entity);\r\n\r\n            re" +
                    "turn result;\r\n        }\r\n\r\n        private ");
            
            #line 480 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.I");
            
            #line 480 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal CreateDal()\r\n        {\r\n            var initParams = GetTestParams(\"DALInitPa" +
                    "rams\");\r\n\r\n            ");
            
            #line 484 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.I");
            
            #line 484 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal dal = new ");
            
            #line 484 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.MSSQL.");
            
            #line 484 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"Dal();
            var dalInitParams = dal.CreateInitParams();
            dalInitParams.Parameters[""ConnectionString""] = (string)initParams.Settings[""ConnectionString""];
            dal.Init(dalInitParams);

            return dal;
        }
        #endregion
    }
}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestFunctionsTemplate.tt"

private string _RootNamespaceField;

/// <summary>
/// Access the RootNamespace parameter of the template.
/// </summary>
private string RootNamespace
{
    get
    {
        return this._RootNamespaceField;
    }
}

private global::CRUDAPI.DataModel.DataTable _tableField;

/// <summary>
/// Access the table parameter of the template.
/// </summary>
private global::CRUDAPI.DataModel.DataTable table
{
    get
    {
        return this._tableField;
    }
}

private global::CRUDAPI.DataModel.ModelHelper _modelHelperField;

/// <summary>
/// Access the modelHelper parameter of the template.
/// </summary>
private global::CRUDAPI.DataModel.ModelHelper modelHelper
{
    get
    {
        return this._modelHelperField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsGetField;

/// <summary>
/// Access the testValsGet parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsGet
{
    get
    {
        return this._testValsGetField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsInsertField;

/// <summary>
/// Access the testValsInsert parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsInsert
{
    get
    {
        return this._testValsInsertField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsUpdateAfterField;

/// <summary>
/// Access the testValsUpdateAfter parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsUpdateAfter
{
    get
    {
        return this._testValsUpdateAfterField;
    }
}

private bool _IsSoftDeleteField;

/// <summary>
/// Access the IsSoftDelete parameter of the template.
/// </summary>
private bool IsSoftDelete
{
    get
    {
        return this._IsSoftDeleteField;
    }
}

private string _SoftDeleteFieldField;

/// <summary>
/// Access the SoftDeleteField parameter of the template.
/// </summary>
private string SoftDeleteField
{
    get
    {
        return this._SoftDeleteFieldField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool RootNamespaceValueAcquired = false;
if (this.Session.ContainsKey("RootNamespace"))
{
    this._RootNamespaceField = ((string)(this.Session["RootNamespace"]));
    RootNamespaceValueAcquired = true;
}
if ((RootNamespaceValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("RootNamespace");
    if ((data != null))
    {
        this._RootNamespaceField = ((string)(data));
    }
}
bool tableValueAcquired = false;
if (this.Session.ContainsKey("table"))
{
    this._tableField = ((global::CRUDAPI.DataModel.DataTable)(this.Session["table"]));
    tableValueAcquired = true;
}
if ((tableValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("table");
    if ((data != null))
    {
        this._tableField = ((global::CRUDAPI.DataModel.DataTable)(data));
    }
}
bool modelHelperValueAcquired = false;
if (this.Session.ContainsKey("modelHelper"))
{
    this._modelHelperField = ((global::CRUDAPI.DataModel.ModelHelper)(this.Session["modelHelper"]));
    modelHelperValueAcquired = true;
}
if ((modelHelperValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modelHelper");
    if ((data != null))
    {
        this._modelHelperField = ((global::CRUDAPI.DataModel.ModelHelper)(data));
    }
}
bool testValsGetValueAcquired = false;
if (this.Session.ContainsKey("testValsGet"))
{
    this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsGet"]));
    testValsGetValueAcquired = true;
}
if ((testValsGetValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsGet");
    if ((data != null))
    {
        this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsInsertValueAcquired = false;
if (this.Session.ContainsKey("testValsInsert"))
{
    this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsInsert"]));
    testValsInsertValueAcquired = true;
}
if ((testValsInsertValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsInsert");
    if ((data != null))
    {
        this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsUpdateAfterValueAcquired = false;
if (this.Session.ContainsKey("testValsUpdateAfter"))
{
    this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsUpdateAfter"]));
    testValsUpdateAfterValueAcquired = true;
}
if ((testValsUpdateAfterValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsUpdateAfter");
    if ((data != null))
    {
        this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool IsSoftDeleteValueAcquired = false;
if (this.Session.ContainsKey("IsSoftDelete"))
{
    this._IsSoftDeleteField = ((bool)(this.Session["IsSoftDelete"]));
    IsSoftDeleteValueAcquired = true;
}
if ((IsSoftDeleteValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsSoftDelete");
    if ((data != null))
    {
        this._IsSoftDeleteField = ((bool)(data));
    }
}
bool SoftDeleteFieldValueAcquired = false;
if (this.Session.ContainsKey("SoftDeleteField"))
{
    this._SoftDeleteFieldField = ((string)(this.Session["SoftDeleteField"]));
    SoftDeleteFieldValueAcquired = true;
}
if ((SoftDeleteFieldValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("SoftDeleteField");
    if ((data != null))
    {
        this._SoftDeleteFieldField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class TestFunctionsTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
