// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CRUDAPI.Template.NET.Tests
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class TestDalTemplate : TestDalTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            this.Write("\r\nusing ");
            
            #line 17 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.MSSQL;\r\nusing ");
            
            #line 18 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces;\r\nusing ");
            
            #line 19 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities;\r\nusing Test.");
            
            #line 20 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.MSSQL;\r\nusing Microsoft.Extensions.Configuration;\r\nusing NUnit.Framework;\r\nu" +
                    "sing System;\r\nusing System.Collections.Generic;\r\nusing System.Data.SqlClient;\r\n\r" +
                    "\n");
            
            #line 27 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

		var pks = modelHelper.GetPKColumns(table);

            
            #line default
            #line hidden
            this.Write("\r\nnamespace ");
            
            #line 31 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Test.DAL.MSSQL\r\n{\r\n    public class Test");
            
            #line 33 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal : TestBase\r\n    {\r\n        [Test]\r\n        public void DalInit_Success()\r\n   " +
                    "     {\r\n            IConfiguration config = GetConfiguration();\r\n            var" +
                    " initParams = config.GetSection(\"DALInitParams\").Get<TestDalInitParams>();\r\n\r\n  " +
                    "          I");
            
            #line 41 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal dal = new ");
            
            #line 41 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal();\r\n            var dalInitParams = dal.CreateInitParams();\r\n            dalI" +
                    "nitParams.Parameters[\"ConnectionString\"] = initParams.ConnectionString;\r\n       " +
                    "     dal.Init(dalInitParams);\r\n        }\r\n\r\n        [Test]\r\n        public void " +
                    "");
            
            #line 48 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_GetAll_Success()\r\n        {\r\n            var dal = Prepare");
            
            #line 50 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            IList<");
            
            #line 52 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("> entities = dal.GetAll();\r\n\r\n            Assert.IsNotNull(entities);\r\n          " +
                    "  Assert.IsNotEmpty(entities);\r\n        }\r\n\r\n        [TestCase(\"");
            
            #line 58 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("\\\\000.GetDetails.Success\")]\r\n        public void ");
            
            #line 59 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_GetDetails_Success(string caseName)\r\n        {\r\n            SqlConnection conn =" +
                    " OpenConnection(\"DALInitParams\");\r\n            var dal = Prepare");
            
            #line 62 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            IList<object> objIds = SetupCase(conn, caseN" +
                    "ame);\r\n");
            
            #line 65 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 69 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 69 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pks[i])));
            
            #line default
            #line hidden
            this.Write(")objIds[");
            
            #line 69 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("];\r\n");
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 73 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" entity = dal.Get(");
            
            #line 73 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 73 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 73 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 73 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            TeardownCase(conn, caseName);\r\n\r\n            Assert.IsNotNull(e" +
                    "ntity);\r\n            ");
            
            #line 78 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsIdentity || c.IsPK)
                    {
            
            
            #line default
            #line hidden
            this.Write("            Assert.IsNotNull(entity.");
            
            #line 84 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n            ");
            
            #line 85 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n            ");
            
            #line 90 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsGet.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(DateTime.Parse(\"");
            
            #line 99 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsGet[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\"), entity.");
            
            #line 99 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 100 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(\"");
            
            #line 105 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsGet[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\", entity.");
            
            #line 105 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 106 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(");
            
            #line 111 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsGet[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(", entity.");
            
            #line 111 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 112 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(testValsGet[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(");
            
            #line 117 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsGet[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(", entity.");
            
            #line 117 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 118 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n        [Test]\r\n        public void ");
            
            #line 126 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_GetDetails_InvalidId()\r\n        {\r\n");
            
            #line 128 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 132 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue - 1;\r\n");
            
            #line 133 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("            var dal = Prepare");
            
            #line 136 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            ");
            
            #line 138 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" entity = dal.Get(");
            
            #line 138 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 138 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 138 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 138 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            Assert.IsNull(entity);\r\n        }\r\n\r\n        [TestCase(\"");
            
            #line 143 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("\\\\010.Delete.Success\")]\r\n        public void ");
            
            #line 144 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Delete_Success(string caseName)\r\n        {\r\n            SqlConnection conn = Ope" +
                    "nConnection(\"DALInitParams\");\r\n            var dal = Prepare");
            
            #line 147 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            IList<object> objIds = SetupCase(conn, caseN" +
                    "ame);\r\n");
            
            #line 150 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 154 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 154 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pks[i])));
            
            #line default
            #line hidden
            this.Write(")objIds[");
            
            #line 154 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("];\r\n");
            
            #line 155 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("            bool removed = dal.Delete(");
            
            #line 158 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 158 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 158 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 158 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            TeardownCase(conn, caseName);\r\n\r\n            Assert.IsTrue(remo" +
                    "ved);\r\n        }\r\n\r\n        [Test]\r\n        public void ");
            
            #line 166 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Delete_InvalidId()\r\n        {\r\n            var dal = Prepare");
            
            #line 168 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n");
            
            #line 169 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 173 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue - 1;\r\n");
            
            #line 174 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("   \r\n            bool removed = dal.Delete(");
            
            #line 178 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 178 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 178 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 178 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n            Assert.IsFalse(removed);\r\n\r\n        }\r\n\r\n        [TestCase(\"");
            
            #line 183 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("\\\\020.Insert.Success\")]\r\n        public void ");
            
            #line 184 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Insert_Success(string caseName)\r\n        {\r\n            SqlConnection conn = Ope" +
                    "nConnection(\"DALInitParams\");\r\n            SetupCase(conn, caseName);\r\n\r\n       " +
                    "     var dal = Prepare");
            
            #line 189 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            var entity = new ");
            
            #line 191 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n            ");
            
            #line 192 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsInsert.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 201 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 201 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 202 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 207 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 207 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 208 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 213 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 213 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 214 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(testValsInsert[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 219 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 219 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 220 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("            \r\n            entity = dal.Insert(entity);\r\n\r\n            TeardownCas" +
                    "e(conn, caseName);\r\n\r\n            Assert.IsNotNull(entity);\r\n            ");
            
            #line 231 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsIdentity || c.IsPK)
                    {
            
            
            #line default
            #line hidden
            this.Write("            Assert.IsNotNull(entity.");
            
            #line 237 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n            ");
            
            #line 238 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n            ");
            
            #line 243 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsInsert.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(DateTime.Parse(\"");
            
            #line 252 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\"), entity.");
            
            #line 252 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 253 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(\"");
            
            #line 258 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\", entity.");
            
            #line 258 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 259 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(");
            
            #line 264 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(", entity.");
            
            #line 264 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 265 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(testValsInsert[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(");
            
            #line 270 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(", entity.");
            
            #line 270 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 271 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n        }\r\n\r\n        [TestCase(\"");
            
            #line 279 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("\\\\030.Update.Success\")]\r\n        public void ");
            
            #line 280 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Update_Success(string caseName)\r\n        {\r\n            SqlConnection conn = Ope" +
                    "nConnection(\"DALInitParams\");\r\n            var dal = Prepare");
            
            #line 283 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            IList<object> objIds = SetupCase(conn, caseN" +
                    "ame);\r\n");
            
            #line 286 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 290 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 290 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pks[i])));
            
            #line default
            #line hidden
            this.Write(")objIds[");
            
            #line 290 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("];\r\n");
            
            #line 291 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 294 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" entity = dal.Get(");
            
            #line 294 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 294 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 294 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 294 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            ");
            
            #line 296 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && !c.IsPK && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 305 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 305 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 306 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 311 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 311 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 312 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 317 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 317 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 318 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 323 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 323 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 324 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n            entity = dal.Update(entity);\r\n\r\n            TeardownCase(conn, case" +
                    "Name);\r\n\r\n            Assert.IsNotNull(entity);\r\n            ");
            
            #line 335 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsIdentity || c.IsPK)
                    {
            
            
            #line default
            #line hidden
            this.Write("            Assert.IsNotNull(entity.");
            
            #line 341 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n            ");
            
            #line 342 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n            ");
            
            #line 347 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(DateTime.Parse(\"");
            
            #line 356 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\"), entity.");
            
            #line 356 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 357 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(\"");
            
            #line 362 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\", entity.");
            
            #line 362 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 363 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(");
            
            #line 368 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(", entity.");
            
            #line 368 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 369 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              Assert.AreEqual(");
            
            #line 374 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(", entity.");
            
            #line 374 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n              ");
            
            #line 375 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n        }\r\n\r\n        [Test]\r\n        public void ");
            
            #line 384 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Update_InvalidId()\r\n        {\r\n            var dal = Prepare");
            
            #line 386 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            var entity = new ");
            
            #line 388 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n            ");
            
            #line 389 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = modelHelper.GetColumnType(c);
                    if(!c.IsIdentity && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 398 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 398 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 399 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 404 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 404 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 405 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 410 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 410 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 411 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 416 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 416 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString() + (columnType == typeof(decimal) ? "M" : string.Empty)));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 417 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write(@"
            try
            {
                entity = dal.Update(entity);

                Assert.Fail(""Fail - exception was expected, but wasn't thrown."");
            }
            catch (Exception ex)
            {
                Assert.Pass(""Success - exception thrown as expected"");
            }
        }

");
            
            #line 435 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

    if(IsSoftDelete && table.HasColumn(SoftDeleteField))
    {

            
            #line default
            #line hidden
            this.Write("        [TestCase(\"");
            
            #line 439 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("\\\\040.Erase.Success\")]\r\n        public void ");
            
            #line 440 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Erase_Success(string caseName)\r\n        {\r\n            SqlConnection conn = Open" +
                    "Connection(\"DALInitParams\");\r\n            var dal = Prepare");
            
            #line 443 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n\r\n            IList<object> objIds = SetupCase(conn, caseN" +
                    "ame);\r\n");
            
            #line 446 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 450 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 450 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pks[i])));
            
            #line default
            #line hidden
            this.Write(")objIds[");
            
            #line 450 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("];\r\n");
            
            #line 451 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("            bool removed = dal.Erase(");
            
            #line 454 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 454 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 454 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 454 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            TeardownCase(conn, caseName);\r\n\r\n            Assert.IsTrue(remo" +
                    "ved);\r\n        }\r\n\r\n        [Test]\r\n        public void ");
            
            #line 462 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Erase_InvalidId()\r\n        {\r\n            var dal = Prepare");
            
            #line 464 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(\"DALInitParams\");\r\n");
            
            #line 465 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 469 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue - 1;\r\n");
            
            #line 470 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("   \r\n            bool removed = dal.Erase(");
            
            #line 474 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
 for(int i = 0; i < pks.Count; ++i) {
            
            #line default
            #line hidden
            this.Write("param");
            
            #line 474 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 474 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 474 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n            Assert.IsFalse(removed);\r\n\r\n        }\r\n");
            
            #line 478 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n        protected I");
            
            #line 482 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal Prepare");
            
            #line 482 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal(string configName)\r\n        {\r\n            IConfiguration config = GetConfigu" +
                    "ration();\r\n            var initParams = config.GetSection(configName).Get<TestDa" +
                    "lInitParams>();\r\n\r\n            I");
            
            #line 487 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal dal = new ");
            
            #line 487 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal();\r\n            var dalInitParams = dal.CreateInitParams();\r\n            dalI" +
                    "nitParams.Parameters[\"ConnectionString\"] = initParams.ConnectionString;\r\n       " +
                    "     dal.Init(dalInitParams);\r\n\r\n            return dal;\r\n        }\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\Tests\TestDalTemplate.tt"

private string _RootNamespaceField;

/// <summary>
/// Access the RootNamespace parameter of the template.
/// </summary>
private string RootNamespace
{
    get
    {
        return this._RootNamespaceField;
    }
}

private global::CRUDAPI.DataModel.DataTable _tableField;

/// <summary>
/// Access the table parameter of the template.
/// </summary>
private global::CRUDAPI.DataModel.DataTable table
{
    get
    {
        return this._tableField;
    }
}

private global::CRUDAPI.DataModel.ModelHelper _modelHelperField;

/// <summary>
/// Access the modelHelper parameter of the template.
/// </summary>
private global::CRUDAPI.DataModel.ModelHelper modelHelper
{
    get
    {
        return this._modelHelperField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsGetField;

/// <summary>
/// Access the testValsGet parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsGet
{
    get
    {
        return this._testValsGetField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsInsertField;

/// <summary>
/// Access the testValsInsert parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsInsert
{
    get
    {
        return this._testValsInsertField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsUpdateAfterField;

/// <summary>
/// Access the testValsUpdateAfter parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsUpdateAfter
{
    get
    {
        return this._testValsUpdateAfterField;
    }
}

private bool _IsSoftDeleteField;

/// <summary>
/// Access the IsSoftDelete parameter of the template.
/// </summary>
private bool IsSoftDelete
{
    get
    {
        return this._IsSoftDeleteField;
    }
}

private string _SoftDeleteFieldField;

/// <summary>
/// Access the SoftDeleteField parameter of the template.
/// </summary>
private string SoftDeleteField
{
    get
    {
        return this._SoftDeleteFieldField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool RootNamespaceValueAcquired = false;
if (this.Session.ContainsKey("RootNamespace"))
{
    this._RootNamespaceField = ((string)(this.Session["RootNamespace"]));
    RootNamespaceValueAcquired = true;
}
if ((RootNamespaceValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("RootNamespace");
    if ((data != null))
    {
        this._RootNamespaceField = ((string)(data));
    }
}
bool tableValueAcquired = false;
if (this.Session.ContainsKey("table"))
{
    this._tableField = ((global::CRUDAPI.DataModel.DataTable)(this.Session["table"]));
    tableValueAcquired = true;
}
if ((tableValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("table");
    if ((data != null))
    {
        this._tableField = ((global::CRUDAPI.DataModel.DataTable)(data));
    }
}
bool modelHelperValueAcquired = false;
if (this.Session.ContainsKey("modelHelper"))
{
    this._modelHelperField = ((global::CRUDAPI.DataModel.ModelHelper)(this.Session["modelHelper"]));
    modelHelperValueAcquired = true;
}
if ((modelHelperValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modelHelper");
    if ((data != null))
    {
        this._modelHelperField = ((global::CRUDAPI.DataModel.ModelHelper)(data));
    }
}
bool testValsGetValueAcquired = false;
if (this.Session.ContainsKey("testValsGet"))
{
    this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsGet"]));
    testValsGetValueAcquired = true;
}
if ((testValsGetValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsGet");
    if ((data != null))
    {
        this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsInsertValueAcquired = false;
if (this.Session.ContainsKey("testValsInsert"))
{
    this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsInsert"]));
    testValsInsertValueAcquired = true;
}
if ((testValsInsertValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsInsert");
    if ((data != null))
    {
        this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsUpdateAfterValueAcquired = false;
if (this.Session.ContainsKey("testValsUpdateAfter"))
{
    this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsUpdateAfter"]));
    testValsUpdateAfterValueAcquired = true;
}
if ((testValsUpdateAfterValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsUpdateAfter");
    if ((data != null))
    {
        this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool IsSoftDeleteValueAcquired = false;
if (this.Session.ContainsKey("IsSoftDelete"))
{
    this._IsSoftDeleteField = ((bool)(this.Session["IsSoftDelete"]));
    IsSoftDeleteValueAcquired = true;
}
if ((IsSoftDeleteValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsSoftDelete");
    if ((data != null))
    {
        this._IsSoftDeleteField = ((bool)(data));
    }
}
bool SoftDeleteFieldValueAcquired = false;
if (this.Session.ContainsKey("SoftDeleteField"))
{
    this._SoftDeleteFieldField = ((string)(this.Session["SoftDeleteField"]));
    SoftDeleteFieldValueAcquired = true;
}
if ((SoftDeleteFieldValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("SoftDeleteField");
    if ((data != null))
    {
        this._SoftDeleteFieldField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class TestDalTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        public System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
