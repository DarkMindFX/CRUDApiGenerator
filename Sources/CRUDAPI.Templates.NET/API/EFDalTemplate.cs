// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CRUDAPI.Template.NET.API
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class EFDalTemplate : EFDalTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            
            #line 14 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

var pks = modelHelper.GetPKColumns(table);

            
            #line default
            #line hidden
            this.Write("\r\nusing ");
            
            #line 18 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.EF.Models;\r\nusing ");
            
            #line 19 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel.Comp" +
                    "osition;\r\nusing System.Linq;\r\n\r\nnamespace ");
            
            #line 24 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.EF.Dals\r\n{\r\n    class ");
            
            #line 26 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("DalInitParams : InitParamsImpl\r\n    {\r\n    }\r\n\r\n    [Export(\"EF\", typeof(I");
            
            #line 30 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal))]\r\n    public class ");
            
            #line 31 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal : I");
            
            #line 31 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal\r\n    {\r\n        ");
            
            #line 33 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(projectName));
            
            #line default
            #line hidden
            this.Write("Context dbContext;\r\n\r\n        public IInitParams CreateInitParams()\r\n        {\r\n " +
                    "           return new ");
            
            #line 37 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("DalInitParams();\r\n        }\r\n\r\n        public bool Delete(");
            
            #line 40 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

            
            for(int i = 0; i < pks.Count; ++i)
            {
            var pk = pks[i];
        
            
            #line default
            #line hidden
            
            #line 46 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pk)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 46 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            
            #line 46 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 46 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            var entity = dbContext.");
            
            #line 48 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize( table.Name )));
            
            #line default
            #line hidden
            this.Write(@".Find(ID);
            if (entity != null)
            {
                entity.IsDeleted = true;
                dbContext.SaveChanges();
                return true;
            }
            else
            {
                return false;
            }
        }

");
            
            #line 61 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

    if(IsSoftDelete && table.HasColumn(SoftDeleteField))
    {

            
            #line default
            #line hidden
            this.Write("        public bool Erase(");
            
            #line 65 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {
            var pk = pks[i];
        
            
            #line default
            #line hidden
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pk)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 70 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            var entity = dbContext.");
            
            #line 72 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize( table.Name )));
            
            #line default
            #line hidden
            this.Write(".Where( e => ");
            
            #line 72 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {
            var pk = pks[i];
        
            
            #line default
            #line hidden
            this.Write("        e.");
            
            #line 77 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 77 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            this.Write("  ");
            
            #line 77 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "&&" : string.Empty));
            
            #line default
            #line hidden
            
            #line 77 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(").FirstOrDefault();\r\n            if (entity != null)\r\n            {\r\n            " +
                    "    var entityEntry = dbContext.Remove<Models.");
            
            #line 80 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">(entity);\r\n                dbContext.SaveChanges();\r\n                return true" +
                    ";\r\n            }\r\n            else\r\n            {\r\n                return false;" +
                    "\r\n            }\r\n        }\r\n");
            
            #line 89 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 93 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 93 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" Get(");
            
            #line 93 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {
            var pk = pks[i];
        
            
            #line default
            #line hidden
            
            #line 98 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(pk)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 98 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            
            #line 98 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            
            #line 98 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            ");
            
            #line 100 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 100 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" result = null;\r\n            var entity = dbContext.");
            
            #line 101 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name)));
            
            #line default
            #line hidden
            this.Write(".Where(e => ");
            
            #line 101 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {
            var pk = pks[i];
        
            
            #line default
            #line hidden
            this.Write("        e.");
            
            #line 106 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 106 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            this.Write("  ");
            
            #line 106 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "&&" : string.Empty));
            
            #line default
            #line hidden
            
            #line 106 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(").FirstOrDefault();\r\n            if (entity != null)\r\n            {\r\n            " +
                    "    result = Convertors.");
            
            #line 109 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.FromEFEntity(entity);\r\n            }\r\n            return result;\r\n     " +
                    "   }\r\n\r\n        public IList<");
            
            #line 114 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 114 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("> GetAll()\r\n        {\r\n            var entities = dbContext.");
            
            #line 116 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name)));
            
            #line default
            #line hidden
            this.Write(".ToList();\r\n\r\n            IList<");
            
            #line 118 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.");
            
            #line 118 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("> result = ToList(entities);\r\n            \r\n            return result;\r\n        }" +
                    "\r\n\r\n        ");
            
            #line 123 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

        foreach(var c in table.Columns)
        {
                if(!string.IsNullOrEmpty(c.FKRefTable))
                {
        
            
            #line default
            #line hidden
            this.Write("        public IList<");
            
            #line 129 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("> GetBy");
            
            #line 129 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 129 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.DbTypeToType(c)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 129 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            var entities = dbContext.");
            
            #line 131 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name)));
            
            #line default
            #line hidden
            this.Write(".Where(e => e.");
            
            #line 131 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" == ");
            
            #line 131 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(").ToList();\r\n\r\n            IList<");
            
            #line 133 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address> result = ToList(entities);\r\n\r\n            return re" +
                    "sult;\r\n        }\r\n        ");
            
            #line 137 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

                }
        }
        
            
            #line default
            #line hidden
            this.Write("        \r\n\r\n        public void Init(IInitParams initParams)\r\n        {\r\n        " +
                    "    dbContext = new ");
            
            #line 145 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(projectName));
            
            #line default
            #line hidden
            this.Write("Context(initParams.Parameters[\"ConnectionString\"]);\r\n        }\r\n\r\n        public " +
                    "");
            
            #line 148 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address Insert(");
            
            #line 148 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address entity)\r\n        {\r\n            ");
            
            #line 150 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address result = null;\r\n            var efEntity = Convertor" +
                    "s.AddressConvertor.ToEFEntity(entity);\r\n            var efEntityEntry = dbContex" +
                    "t.Add<");
            
            #line 152 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.EF.Models.Address>(efEntity);\r\n            dbContext.SaveChanges();\r\n\r\n     " +
                    "       result = Convertors.AddressConvertor.FromEFEntity(efEntityEntry.Entity);\r" +
                    "\n\r\n            return result;\r\n        }\r\n\r\n        public ");
            
            #line 160 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address Update(");
            
            #line 160 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address entity)\r\n        {\r\n            ");
            
            #line 162 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address result = null;\r\n            var efEntity = dbContext" +
                    ".Addresses.Where(e => ");
            
            #line 163 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

            for(int i = 0; i < pks.Count; ++i)
            {
            var pk = pks[i];
        
            
            #line default
            #line hidden
            this.Write("        e.");
            
            #line 168 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 168 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name));
            
            #line default
            #line hidden
            this.Write("  ");
            
            #line 168 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "&&" : string.Empty));
            
            #line default
            #line hidden
            
            #line 168 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(@").FirstOrDefault();
            if (efEntity != null)
            {
                efEntity.AddressTypeID = entity.AddressTypeID;

                efEntity.Title = entity.Title;

                efEntity.CityID = entity.CityID;

                efEntity.Street = entity.Street;

                efEntity.BuildingNo = entity.BuildingNo;

                efEntity.ApartmentNo = entity.ApartmentNo;

                efEntity.Comment = entity.Comment;

                efEntity.CreatedByID = entity.CreatedByID;

                efEntity.CreatedDate = entity.CreatedDate;

                efEntity.ModifiedByID = entity.ModifiedByID;

                efEntity.ModifiedDate = entity.ModifiedDate;

                efEntity.IsDeleted = entity.IsDeleted;

                dbContext.SaveChanges();

                efEntity = dbContext.Addresses.Where(e => e.ID == entity.ID).FirstOrDefault();
                result = Convertors.AddressConvertor.FromEFEntity(efEntity);
            }
            return result;
        }

        #region Support methods
        IList<");
            
            #line 204 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address> ToList(IList<");
            
            #line 204 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".DAL.EF.Models.Address> entities)\r\n        {\r\n            IList<");
            
            #line 206 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(".Interfaces.Entities.Address> result = new List<");
            
            #line 206 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RootNamespace));
            
            #line default
            #line hidden
            this.Write(@".Interfaces.Entities.Address>();
            if (entities != null)
            {
                foreach (var e in entities)
                {
                    result.Add(Convertors.AddressConvertor.FromEFEntity(e));
                }
            }
            return result;
        }
        
        #endregion
    }
}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Projects\CRUDApiGenerator\Sources\CRUDAPI.Templates.NET\API\EFDalTemplate.tt"

private string _RootNamespaceField;

/// <summary>
/// Access the RootNamespace parameter of the template.
/// </summary>
private string RootNamespace
{
    get
    {
        return this._RootNamespaceField;
    }
}

private global::CRUDAPI.DataModel.DataTable _tableField;

/// <summary>
/// Access the table parameter of the template.
/// </summary>
private global::CRUDAPI.DataModel.DataTable table
{
    get
    {
        return this._tableField;
    }
}

private global::CRUDAPI.DataModel.ModelHelper _modelHelperField;

/// <summary>
/// Access the modelHelper parameter of the template.
/// </summary>
private global::CRUDAPI.DataModel.ModelHelper modelHelper
{
    get
    {
        return this._modelHelperField;
    }
}

private string _projectNameField;

/// <summary>
/// Access the projectName parameter of the template.
/// </summary>
private string projectName
{
    get
    {
        return this._projectNameField;
    }
}

private bool _IsSoftDeleteField;

/// <summary>
/// Access the IsSoftDelete parameter of the template.
/// </summary>
private bool IsSoftDelete
{
    get
    {
        return this._IsSoftDeleteField;
    }
}

private string _SoftDeleteFieldField;

/// <summary>
/// Access the SoftDeleteField parameter of the template.
/// </summary>
private string SoftDeleteField
{
    get
    {
        return this._SoftDeleteFieldField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool RootNamespaceValueAcquired = false;
if (this.Session.ContainsKey("RootNamespace"))
{
    this._RootNamespaceField = ((string)(this.Session["RootNamespace"]));
    RootNamespaceValueAcquired = true;
}
if ((RootNamespaceValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("RootNamespace");
    if ((data != null))
    {
        this._RootNamespaceField = ((string)(data));
    }
}
bool tableValueAcquired = false;
if (this.Session.ContainsKey("table"))
{
    this._tableField = ((global::CRUDAPI.DataModel.DataTable)(this.Session["table"]));
    tableValueAcquired = true;
}
if ((tableValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("table");
    if ((data != null))
    {
        this._tableField = ((global::CRUDAPI.DataModel.DataTable)(data));
    }
}
bool modelHelperValueAcquired = false;
if (this.Session.ContainsKey("modelHelper"))
{
    this._modelHelperField = ((global::CRUDAPI.DataModel.ModelHelper)(this.Session["modelHelper"]));
    modelHelperValueAcquired = true;
}
if ((modelHelperValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modelHelper");
    if ((data != null))
    {
        this._modelHelperField = ((global::CRUDAPI.DataModel.ModelHelper)(data));
    }
}
bool projectNameValueAcquired = false;
if (this.Session.ContainsKey("projectName"))
{
    this._projectNameField = ((string)(this.Session["projectName"]));
    projectNameValueAcquired = true;
}
if ((projectNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("projectName");
    if ((data != null))
    {
        this._projectNameField = ((string)(data));
    }
}
bool IsSoftDeleteValueAcquired = false;
if (this.Session.ContainsKey("IsSoftDelete"))
{
    this._IsSoftDeleteField = ((bool)(this.Session["IsSoftDelete"]));
    IsSoftDeleteValueAcquired = true;
}
if ((IsSoftDeleteValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("IsSoftDelete");
    if ((data != null))
    {
        this._IsSoftDeleteField = ((bool)(data));
    }
}
bool SoftDeleteFieldValueAcquired = false;
if (this.Session.ContainsKey("SoftDeleteField"))
{
    this._SoftDeleteFieldField = ((string)(this.Session["SoftDeleteField"]));
    SoftDeleteFieldValueAcquired = true;
}
if ((SoftDeleteFieldValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("SoftDeleteField");
    if ((data != null))
    {
        this._SoftDeleteFieldField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class EFDalTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
