<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="RootNamespace" type="System.String" #>
<#@ parameter name="table" type="CRUDAPI.DataModel.DataTable" #>
<#@ parameter name="modelHelper" type="CRUDAPI.DataModel.ModelHelper" #>
<#
var pks = modelHelper.GetPKColumns(table);
var tableNamePlural = modelHelper.Pluralize( table.Name );
#>
using Microsoft.Azure.Functions.Extensions.DependencyInjection;
using Microsoft.Extensions.DependencyInjection;
using <#= RootNamespace #>.Functions.Common;

[assembly: FunctionsStartup(typeof(<#=RootNamespace #>.Functions.<#= table.Name #>.Startup))]
namespace <#=RootNamespace #>.Functions.<#= table.Name #>
{
    public class Startup : FunctionStartupBase
    {
        public override void Configure(IFunctionsHostBuilder builder)
        {
            base.Configure(builder);

            var dal<#= table.Name #>Dal = InitDal<Interfaces.I<#= table.Name #>Dal>();
            builder.Services.AddSingleton<Interfaces.I<#= table.Name #>Dal>(dal<#= table.Name #>Dal);
            builder.Services.AddSingleton<<#=RootNamespace #>.Services.Dal.I<#= table.Name #>Dal, <#=RootNamespace #>.Services.Dal.<#= table.Name #>Dal>();            
        }
    }
}